package Grafico;

import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class CalculadoraMatriz extends JFrame {
  /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
private JPanel contentPane;
  private JTextField txt11;
  private JTextField txt21;
  private JTextField txt31;
  private JTextField txt12;
  private JTextField txt22;
  private JTextField txt32;
  private JTextField txt13;
  private JTextField txt23;
  private JTextField txt33;
  private JTextField txt211;
  private JTextField txt221;
  private JTextField txt231;
  private JTextField txt212;
  private JTextField txt222;
  private JTextField txt232;
  private JTextField txt213;
  private JTextField txt223;
  private JTextField txt233;
  private JTextField txtResEsc;
  private JTextField txtResDeter;

  public static void main(String[] args) {
    EventQueue.invokeLater(new Runnable() {
      public void run() {
        try {
          CalculadoraMatriz frame = new CalculadoraMatriz();
          frame.setVisible(true);
        } catch (Exception e) {
          e.printStackTrace();
        }
      }
    });
  }

  public CalculadoraMatriz() {
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setBounds(100, 100, 399, 471);
    contentPane = new JPanel();
    contentPane.setBackground(Color.GRAY);
    contentPane.setForeground(Color.YELLOW);
    contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
    setContentPane(contentPane);
    contentPane.setLayout(null);

    txt11 = new JTextField();
    txt11.setForeground(Color.BLACK);
    txt11.setBounds(10, 11, 45, 28);
    contentPane.add(txt11);
    txt11.setColumns(10);

    
    int[][] matriz1 = new int[3][3];
    int[][] matriz2 = new int[3][3];
    int[][] resultado = new int[3][3];
    int[][] matriz1g = new int[3][3];
    matriz1[0][0] = Integer.parseInt(txt11.getText());
    matriz1[0][1] = Integer.parseInt(txt12.getText());
    matriz1[0][2] = Integer.parseInt(txt13.getText());
    matriz1[1][0] = Integer.parseInt(txt21.getText());
    matriz1[1][1] = Integer.parseInt(txt22.getText());
    matriz1[1][2] = Integer.parseInt(txt23.getText());
    matriz1[2][0] = Integer.parseInt(txt31.getText());
    matriz1[2][1] = Integer.parseInt(txt32.getText());
    matriz1[2][2] = Integer.parseInt(txt33.getText());

    matriz2[0][0] = Integer.parseInt(txt211.getText());
    matriz2[0][1] = Integer.parseInt(txt212.getText());
    matriz2[0][2] = Integer.parseInt(txt213.getText());
    matriz2[1][0] = Integer.parseInt(txt221.getText());
    matriz2[1][1] = Integer.parseInt(txt222.getText());
    matriz2[1][2] = Integer.parseInt(txt223.getText());
    matriz2[2][0] = Integer.parseInt(txt231.getText());
    matriz2[2][1] = Integer.parseInt(txt232.getText());
    matriz2[2][2] = Integer.parseInt(txt233.getText());
	
    if (operacion = "+") {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                resultado[i][j] = matriz1[i][j] + matriz2[i][j];
            }
        }
    } 
    else if (operacion = "-") {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                resultado[i][j] = matriz1[i][j] - matriz2[i][j];
            }
        }
    }
    else if (operacion = "Deter") {
   	 float txtResDeter = (matriz1[0][0] * matriz1[1][1] * matriz1[2][2]) + (matriz1[1][0] * matriz1[2][1] * matriz1[0][2]) + (matriz1[2][0] * matriz1[0][1] * matriz1[1][2]);
     txtResDeter = txtResDeter - (matriz1[2][0] * matriz1[1][1] * matriz1[0][2]) - (matriz1[0][0] * matriz1[2][1] * matriz1[1][2]) - (matriz1[1][0] * matriz1[0][1] * matriz1[2][2]);
    }
    else if (operacion = "Escal") {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
            	float txtResEsc = matriz1[i][j] * txtResEsc;
            }
        }
    }
    else if (operacion = "x") {
    resultado[0][0] = (matriz1[0][0] * matriz2[0][0] + matriz1[0][1] * matriz2[1][0] + matriz1[0][2] * matriz2[2][0]);
    resultado[0][1] = (matriz1[0][0] * matriz2[0][1] + matriz1[0][1] * matriz2[1][1] + matriz1[0][2] * matriz2[2][1]);
    resultado[0][2] = (matriz1[0][0] * matriz2[0][2] + matriz1[0][1] * matriz2[1][2] + matriz1[0][2] * matriz2[2][2]);
    resultado[1][0] = (matriz1[1][0] * matriz2[0][0] + matriz1[1][1] * matriz2[1][0] + matriz1[1][2] * matriz2[2][0]);
    resultado[1][1] = (matriz1[1][0] * matriz2[0][1] + matriz1[1][1] * matriz2[1][1] + matriz1[1][2] * matriz2[2][1]);
    resultado[1][2] = (matriz1[1][0] * matriz2[0][2] + matriz1[1][1] * matriz2[1][2] + matriz1[1][2] * matriz2[2][2]);
    resultado[2][0] = (matriz1[2][0] * matriz2[0][0] + matriz1[2][1] * matriz2[1][0] + matriz1[2][2] * matriz2[2][0]);
    resultado[2][1] = (matriz1[2][0] * matriz2[0][1] + matriz1[2][1] * matriz2[1][1] + matriz1[2][2] * matriz2[2][1]);
    resultado[2][2] = (matriz1[2][0] * matriz2[0][2] + matriz1[2][1] * matriz2[1][2] + matriz1[2][2] * matriz2[2][2]);
    }
    else if (operacion = "Invers") {
    float txtResDeter = (matriz1[0][0] * matriz1[1][1] * matriz1[2][2]) + (matriz1[1][0] * matriz1[2][1] * matriz1[0][2]) + (matriz1[2][0] * matriz1[0][1] * matriz1[1][2]);
    txtResDeter = txtResDeter - (matriz1[2][0] * matriz1[1][1] * matriz1[0][2]) - (matriz1[0][0] * matriz1[2][1] * matriz1[1][2]) - (matriz1[1][0] * matriz1[0][1] * matriz1[2][2]);
     if (txtResDeter == 0) {
     resultado[2][2] = "ERROR";
     }
     else if (txtResDeter != 0) {
         matriz1g[0][0] = matriz1[0][0];
         matriz1g[1][0] = matriz1[0][1];
         matriz1g[2][0] = matriz1[0][2];
         matriz1g[0][1] = matriz1[1][0];
         matriz1g[1][1] = matriz1[1][1];
         matriz1g[2][1] = matriz1[1][2];
         matriz1g[0][2] = matriz1[2][0];
         matriz1g[1][2] = matriz1[2][1];
         matriz1g[2][2] = matriz1[2][2]; 
    	 for (int i = 0; i < 3; i++) {
             for (int j = 0; j < 3; j++) {
                 resultado[i][j] = (1 / txtResDeter) * matriz1g[i][j];

             }
         }
     }	 
    }
    else if (operacion = "/") {
    	
    }
    

    	
    txt11.setText(String.valueOf(resultado[0][0]));
    txt12.setText(String.valueOf(resultado[0][1]));
    txt13.setText(String.valueOf(resultado[0][2]));
    txt21.setText(String.valueOf(resultado[1][0]));
    txt22.setText(String.valueOf(resultado[1][1]));
    txt23.setText(String.valueOf(resultado[1][2]));
    txt31.setText(String.valueOf(resultado[2][0]));
    txt32.setText(String.valueOf(resultado[2][1]));
    txt33.setText(String.valueOf(resultado[2][2]));    
    
    JButton btn1 = new JButton("1");
    btn1.setForeground(Color.WHITE);
    btn1.setFont(new Font("Arial", Font.BOLD, 18));
    btn1.setBackground(Color.BLACK);
    btn1.setBounds(10, 131, 45, 50);
    contentPane.add(btn1);
    btn1.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        txt11.setText(txt11.getText() + "1");
      }
    });

    JButton btn2 = new JButton("2");
    btn2.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btn2.setForeground(Color.WHITE);
    btn2.setFont(new Font("Arial", Font.BOLD, 18));
    btn2.setBackground(Color.BLACK);
    btn2.setBounds(65, 131, 45, 50);
    contentPane.add(btn2);
    btn2.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        txt11.setText(txt11.getText() + "2");
      }
    });

    JButton btn3 = new JButton("3");
    btn3.setForeground(Color.WHITE);
    btn3.setFont(new Font("Arial", Font.BOLD, 18));
    btn3.setBackground(Color.BLACK);
    btn3.setBounds(120, 131, 45, 50);
    contentPane.add(btn3);
    btn3.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        txt11.setText(txt11.getText() + "3");
      }
    });

    JButton btnEsc = new JButton("Escal");
    btnEsc.setForeground(Color.BLUE);
    btnEsc.setFont(new Font("Arial", Font.BOLD, 18));
    btnEsc.setBackground(Color.BLACK);
    btnEsc.setBounds(230, 192, 98, 50);
    contentPane.add(btnEsc);

    JButton btnInvers = new JButton("Invers");
    btnInvers.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btnInvers.setForeground(Color.BLUE);
    btnInvers.setFont(new Font("Arial", Font.BOLD, 18));
    btnInvers.setBackground(Color.BLACK);
    btnInvers.setBounds(230, 253, 98, 50);
    contentPane.add(btnInvers);

    JButton btnlimpiar = new JButton("C");
    btnlimpiar.setForeground(Color.RED);
    btnlimpiar.setFont(new Font("Arial", Font.BOLD, 18));
    btnlimpiar.setBackground(Color.BLACK);
    btnlimpiar.setBounds(230, 131, 144, 50);
    contentPane.add(btnlimpiar);

    JButton btnsuma = new JButton("+");
    btnsuma.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btnsuma.setForeground(Color.ORANGE);
    btnsuma.setFont(new Font("Arial", Font.BOLD, 18));
    btnsuma.setBackground(Color.BLACK);
    btnsuma.setBounds(175, 131, 45, 50);
    contentPane.add(btnsuma);

    JButton btn4 = new JButton("4");
    btn4.setForeground(Color.WHITE);
    btn4.setFont(new Font("Arial", Font.BOLD, 18));
    btn4.setBackground(Color.BLACK);
    btn4.setBounds(10, 192, 45, 50);
    contentPane.add(btn4);

    JButton btn5 = new JButton("5");
    btn5.setForeground(Color.WHITE);
    btn5.setFont(new Font("Arial", Font.BOLD, 18));
    btn5.setBackground(Color.BLACK);
    btn5.setBounds(65, 192, 45, 50);
    contentPane.add(btn5);

    JButton btn6 = new JButton("6");
    btn6.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btn6.setForeground(Color.WHITE);
    btn6.setFont(new Font("Arial", Font.BOLD, 18));
    btn6.setBackground(Color.BLACK);
    btn6.setBounds(120, 192, 45, 50);
    contentPane.add(btn6);

    JButton btnresta = new JButton("-");
    btnresta.setForeground(Color.ORANGE);
    btnresta.setFont(new Font("Arial", Font.BOLD, 18));
    btnresta.setBackground(Color.BLACK);
    btnresta.setBounds(175, 192, 45, 50);
    contentPane.add(btnresta);

    JButton btn7 = new JButton("7");
    btn7.setForeground(Color.WHITE);
    btn7.setFont(new Font("Arial", Font.BOLD, 18));
    btn7.setBackground(Color.BLACK);
    btn7.setBounds(10, 253, 45, 50);
    contentPane.add(btn7);

    JButton btn8 = new JButton("8");
    btn8.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btn8.setForeground(Color.WHITE);
    btn8.setFont(new Font("Arial", Font.BOLD, 18));
    btn8.setBackground(Color.BLACK);
    btn8.setBounds(65, 253, 45, 50);
    contentPane.add(btn8);

    JButton btn9 = new JButton("9");
    btn9.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btn9.setForeground(Color.WHITE);
    btn9.setFont(new Font("Arial", Font.BOLD, 18));
    btn9.setBackground(Color.BLACK);
    btn9.setBounds(120, 253, 45, 50);
    contentPane.add(btn9);

    JButton btnpor = new JButton("x");
    btnpor.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
     txt13.setText(txt13.getText() + "x");
      }
    });
    btnpor.setForeground(Color.ORANGE);
    btnpor.setFont(new Font("Arial", Font.BOLD, 18));
    btnpor.setBackground(Color.BLACK);
    btnpor.setBounds(175, 253, 45, 50);
    contentPane.add(btnpor);

    JButton btndivision = new JButton("/");
    btndivision.setForeground(Color.ORANGE);
    btndivision.setFont(new Font("Arial", Font.BOLD, 18));
    btndivision.setBackground(Color.BLACK);
    btndivision.setBounds(175, 314, 45, 50);
    contentPane.add(btndivision);

    JButton btnigual = new JButton("=");
    btnigual.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btnigual.setForeground(Color.RED);
    btnigual.setFont(new Font("Arial", Font.BOLD, 18));
    btnigual.setBackground(Color.BLACK);
    btnigual.setBounds(120, 314, 45, 50);
    contentPane.add(btnigual);

    JButton btn0 = new JButton("0");
    btn0.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btn0.setForeground(Color.WHITE);
    btn0.setFont(new Font("Arial", Font.BOLD, 18));
    btn0.setBackground(Color.BLACK);
    btn0.setBounds(65, 314, 45, 50);
    contentPane.add(btn0);

    JButton btncoma = new JButton(",");
    btncoma.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btncoma.setForeground(Color.RED);
    btncoma.setFont(new Font("Arial", Font.BOLD, 18));
    btncoma.setBackground(Color.BLACK);
    btncoma.setBounds(10, 314, 45, 50);
    contentPane.add(btncoma);

    JButton btnNewButton = new JButton("↓");
    btnNewButton.setForeground(Color.CYAN);
    btnNewButton.setBackground(Color.BLACK);
    btnNewButton.setBounds(10, 375, 364, 45);
    contentPane.add(btnNewButton);

    JButton btnDeterm = new JButton("Deter");
    btnDeterm.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
      }
    });
    btnDeterm.setForeground(Color.BLUE);
    btnDeterm.setFont(new Font("Arial", Font.BOLD, 18));
    btnDeterm.setBackground(Color.BLACK);
    btnDeterm.setBounds(230, 314, 98, 50);
    contentPane.add(btnDeterm);

    txt21 = new JTextField();
    txt21.setColumns(10);
    txt21.setBounds(10, 49, 45, 28);
    contentPane.add(txt21);

    txt31 = new JTextField();
    txt31.setColumns(10);
    txt31.setBounds(10, 87, 45, 28);
    contentPane.add(txt31);

    txt12 = new JTextField();
    txt12.setColumns(10);
    txt12.setBounds(65, 11, 45, 28);
    contentPane.add(txt12);

    txt22 = new JTextField();
    txt22.setColumns(10);
    txt22.setBounds(65, 49, 45, 28);
    contentPane.add(txt22);

    txt32 = new JTextField();
    txt32.setColumns(10);
    txt32.setBounds(65, 87, 45, 28);
    contentPane.add(txt32);

    txt13 = new JTextField();
    txt13.setColumns(10);
    txt13.setBounds(120, 11, 45, 28);
    contentPane.add(txt13);

    txt23 =new JTextField();
    txt23.setColumns(10);
    txt23.setBounds(120, 49, 45, 28);
    contentPane.add(txt23);

    txt33 = new JTextField();
    txt33.setColumns(10);
    txt33.setBounds(120, 87, 45, 28);
    contentPane.add(txt33);

    txt211 = new JTextField();
    txt211.setBounds(209, 11, 45, 28);
    contentPane.add(txt211);
    txt211.setColumns(10);

    txt221 = new JTextField();
    txt221.setColumns(10);
    txt221.setBounds(209, 49, 45, 28);
    contentPane.add(txt221);

    txt231 = new JTextField();
    txt231.setColumns(10);
    txt231.setBounds(209, 87, 45, 28);
    contentPane.add(txt231);

    txt212 = new JTextField();
    txt212.setColumns(10);
    txt212.setBounds(264, 11, 45, 28);
    contentPane.add(txt212);

    txt222 = new JTextField();
    txt222.setColumns(10);
    txt222.setBounds(264, 49, 45, 28);
    contentPane.add(txt222);

    txt232 = new JTextField();
    txt232.setColumns(10);
    txt232.setBounds(264, 87, 45, 28);
    contentPane.add(txt232);

    txt213 = new JTextField();
    txt213.setColumns(10);
    txt213.setBounds(319, 11, 45, 28);
    contentPane.add(txt213);

    txt223 = new JTextField();
    txt223.setColumns(10);
    txt223.setBounds(319, 49, 45, 28);
    contentPane.add(txt223);
    
    txt233 = new JTextField();
    txt233.setColumns(10);
    txt233.setBounds(319, 87, 45, 28);
    contentPane.add(txt233);
    
    txtResEsc = new JTextField();
    txtResEsc.setColumns(10);
    txtResEsc.setBounds(329, 192, 45, 50);
    contentPane.add(txtResEsc);
    
    txtResDeter = new JTextField();
    txtResDeter.setColumns(10);
    txtResDeter.setBounds(329, 314, 45, 50);
    contentPane.add(txtResDeter);
  }
}
